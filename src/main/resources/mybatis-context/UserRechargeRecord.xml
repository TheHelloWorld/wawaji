<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.toiletCat.dao.UserRechargeRecordDao">

    <!-- 用户充值记录表 -->
    <resultMap type="com.toiletCat.entity.UserRechargeRecord" id="userRechargeRecordMap">
        <!-- 主键id -->
        <id property="id" column="id" jdbcType="BIGINT"/>
        <!-- 用户编号 -->
        <result property="userNo" column="user_no" jdbcType="VARCHAR"/>
        <!-- 用户编号 -->
        <result property="orderNo" column="order_no" jdbcType="VARCHAR"/>
        <!-- 充值类型 -->
        <result property="rechargeType" column="recharge_type" jdbcType="VARCHAR"/>
        <!-- 充值金额 -->
        <result property="amount" column="amount" jdbcType="DECIMAL"/>
        <!-- 交易状态 -->
        <result property="tradeStatus" column="trade_status" jdbcType="INTEGER"/>
        <!-- 交易日期 -->
        <result property="tradeDate" column="trade_date" jdbcType="INTEGER"/>
        <!-- 交易时间 -->
        <result property="tradeTime" column="trade_time" />
        <!-- 创建时间 -->
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <!-- 最后修改时间 -->
        <result property="lastUpdateTime" column="last_update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 添加用户充值记录 -->
    <insert id="addUserRechargeRecord" parameterType="com.toiletCat.entity.UserRechargeRecord">
        insert into user_recharge_record
            (
                user_no,
                amount,
                trade_status,
                trade_date,
                trade_time,
                order_no,
                recharge_type
            )
        values
            (
                #{userNo, jdbcType=VARCHAR},
                #{amount, jdbcType=DECIMAL},
                #{tradeStatus, jdbcType=INTEGER},
                #{tradeDate, jdbcType=INTEGER},
                #{tradeTime},
                #{orderNo, jdbcType=VARCHAR},
                #{rechargeType, jdbcType=VARCHAR}
            )
    </insert>

    <!-- 根据交易日期和交易状态分页获得所有充值记录 -->
    <select id="countUserRechargeRecordByUserNo" parameterType="java.lang.String" resultType="java.lang.Integer">
        select count(*) from user_recharge_record where user_no = #{userNo}
    </select>

    <!-- 根据用户编号和订单号获得金额 -->
    <select id="getAmountByUserNoAndOrderNo" resultType="java.math.BigDecimal">
        select amount from user_recharge_record where order_no = #{orderNo} and user_no = #{userNo}
    </select>

    <!-- 根据用户编号分页获得用户充值记录 -->
    <select id="getUserRechargeRecordByUserNo" resultMap="userRechargeRecordMap">
        select
            id,
            user_no,
            amount,
            recharge_type,
            order_no,
            trade_status,
            trade_date,
            trade_time
        from user_recharge_record
        where user_no = #{userNo}
        limit #{startPage}, #{pageSize}
    </select>

    <!-- 根据交易日期和交易状态分页获得所有充值记录 -->
    <select id="countUserRechargeRecordByTradeDateAndTradeStatus" resultType="java.lang.Integer">
        select count(*) from user_recharge_record where trade_date = #{tradeDate} and trade_status = #{tradeStatus}
    </select>

    <!-- 根据交易日期和交易状态分页获得所有充值记录 -->
    <select id="getUserRechargeRecordByTradeDateAndTradeStatus" resultMap="userRechargeRecordMap">
        select
            id,
            user_no,
            recharge_type,
            order_no,
            amount,
            trade_status,
            trade_date,
            trade_time
        from user_recharge_record
        where trade_date = #{tradeDate} and trade_status = #{tradeStatus} order by trade_date desc
        limit #{startPage}, #{pageSize}
    </select>

    <!-- 根据交易日期和交易状态获得汇总信息 -->
    <select id="getSumRechargeAmountAndCountByTradeDateAndTradeStatus" resultType="java.util.Map">
        select
          sum(amount) as totalAmount,
          count(*) as totalCount
        from user_recharge_record
        where trade_date = #{tradeDate} and trade_status = #{tradeStatus}
        limit #{startPage}, #{pageSize}
    </select>

    <!-- 根据订单编号修改交易状态 -->
    <update id="updateTradeStatusByOrderNo">
        update user_recharge_record set
          trade_status = #{tradeStatus, jdbcType=INTEGER}
        where order_no = #{orderNo, jdbcType=VARCHAR}
    </update>

    <!-- 根据用户编号和订单号获得交易结果 -->
    <select id="getTradeStatusByOrderNo" resultType="java.lang.Integer">
        select trade_status from user_recharge_record where order_no = #{orderNo} and user_no = #{userNo}
    </select>

    <!-- 根据用户编号获得所有非终态订单 -->
    <select id="getAllInitRecordByUserNo" parameterType="java.lang.String" resultMap="userRechargeRecordMap">
        select
            order_no,
            amount
        from user_recharge_record where user_no = #{userNo} and trade_status = 0
    </select>

</mapper>